FUNCTION_BLOCK "fb_D-Regler_V15.0.4"
TITLE = D-Regler
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : sf
   VAR_INPUT 
      ir_SollstwertDiverenz { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Real;   // SollstwertDiverenz
      ir_DifferenzialVerstärkung { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Real;   // Differenzial-Verstärkung
      itime_HaltezeitDifferezia { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Time;   // Differenzial-Haltezeit
      ib_Reset { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Bool := FALSE;   // Reset
   END_VAR

   VAR_OUTPUT 
      or_Reglerantwort { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Real;   // Reglerantwort
   END_VAR

   VAR 
      Zwischenwert { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Real;
      VergangeneZeit { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Real;   // in s
      StaticZyklusZeit_Aux { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : LReal;
   END_VAR

   VAR_TEMP 
      Haltezeit : Real;   // in s
   END_VAR


BEGIN
	#VergangeneZeit := LREAL_TO_REAL(RUNTIME(#StaticZyklusZeit_Aux));
	#Haltezeit := DINT_TO_REAL(TIME_TO_DINT(#itime_HaltezeitDifferezia)) * 0.001;
	IF #itime_HaltezeitDifferezia = t#0s OR #ib_Reset THEN
	    #Zwischenwert := 0;
	    #or_Reglerantwort := 0;
	ELSE
	    IF #VergangeneZeit > 0 AND #VergangeneZeit < 0.1 THEN
	        #Zwischenwert += (#ir_SollstwertDiverenz - #Zwischenwert) * #VergangeneZeit / #Haltezeit;
	    END_IF;
	    #or_Reglerantwort := (#ir_SollstwertDiverenz - #Zwischenwert) * #ir_DifferenzialVerstärkung * -1;
	END_IF;
END_FUNCTION_BLOCK

