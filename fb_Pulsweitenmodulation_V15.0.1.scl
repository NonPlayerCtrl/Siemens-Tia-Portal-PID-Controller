FUNCTION_BLOCK "fb_Pulsweitenmodulation_V15.0.1"
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_INPUT 
      ir_PulsPauseLängeSekunden { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Real;   // Input in s
      ir_PulsePauseRatioProzent { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Real := 50.0;   // Pulse pause ratio in %
      ib_Start { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Bool;
   END_VAR

   VAR_OUTPUT 
      ob_clock { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Bool;   // -
   END_VAR

   VAR 
      instTofTimePulse {InstructionName := 'TOF_TIME'; LibVersion := '1.0'; ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : TOF_TIME;   // -
      instTofTimePause {InstructionName := 'TOF_TIME'; LibVersion := '1.0'; ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : TOF_TIME;   // -
      statTimePulse { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Time;   // -
      statTimePause { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Time;   // -
   END_VAR

   VAR_TEMP 
      tempPulseRate : Real;   // -
      tempPauseRate : Real;   // -
   END_VAR


BEGIN
	#tempPulseRate := #ir_PulsePauseRatioProzent / 100;
	#tempPauseRate := 1 - #tempPulseRate;
	#statTimePulse := UDINT_TO_TIME(REAL_TO_UDINT((1000.0 * #ir_PulsPauseLängeSekunden * #tempPulseRate)));    
	#statTimePause := UDINT_TO_TIME(REAL_TO_UDINT((1000.0 * #ir_PulsPauseLängeSekunden * #tempPauseRate))); 
	#instTofTimePulse(IN := NOT #instTofTimePause.Q,PT := #statTimePulse);
	#instTofTimePause(IN := #instTofTimePulse.Q, PT := #statTimePause);
	IF #ib_Start = TRUE
	THEN
	    #ob_clock := #instTofTimePulse.Q;
	ELSE
	    #ob_clock := FALSE;
	END_IF;
END_FUNCTION_BLOCK

